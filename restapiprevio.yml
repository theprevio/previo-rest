---
swagger: "2.0"
info:
  title: "REST API"
  description: "Restful API"
  contact:
    name: "Previo API support"
    url: "https://previo.cz"
    email: "info@previo.cz"
  version: "1.0.0"
host: "api.previo.cz"
basePath: "/rest"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /document/export:
    get:
      tags:
      - "ExportDocuments"
      summary: "Get exported documents"
      operationId: "exportDocuments"
      parameters:
      - name: "X-Previo-Hotel-Id"
        in: "header"
        description: "Hotel ID in PMS"
        required: true
        type: "integer"
        format: "int32"
      - name: "filterText"
        in: "query"
        description: "Filter document names"
        required: false
        type: "string"
      - name: "filterFrom"
        in: "query"
        description: "From filter"
        required: true
        type: "string"
        format: "date"
      - name: "filterTo"
        in: "query"
        description: "To filter"
        required: false
        type: "string"
        format: "date"
      - name: "filterDateType"
        in: "query"
        description: "Which date type to use for filtering the reservations "
        required: true
        type: "string"
        enum:
        - "issueDate"
        - "paidDate"
        - "taxDate"
      - name: "paid"
        in: "query"
        description: "Filter by payment status"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "paid"
          - "not-paid"
          - "partly"
        collectionFormat: "multi"
      - name: "invoiceType"
        in: "query"
        description: "Filter by document type"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "INV"
          - "COU"
          - "CRE"
          - "REC"
          - "PRI"
          - "ADV"
        collectionFormat: "multi"
      - name: "exportFormat"
        in: "query"
        description: "Export document format"
        required: true
        type: "string"
        collectionFormat: "multi"
        enum:
        - "money"
        - "pohoda"
        - "isdoc"
      responses:
        200:
          description: "Exported document"
          schema:
            properties:
              success:
                type: "boolean"
              document:
                description: "UTF-8 encoded document"
                type: "string"
            type: "object"
        400:
          description: "Wrong username/password combination"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Error"
        500:
          description: "Error occured"
          schema:
            $ref: "#/definitions/Error"
      security:
      - basicAuth: []
  /packages/search:
    get:
      tags:
      - "SearchPackages"
      summary: "Search for available stay packages"
      operationId: "searchPackages"
      parameters:
      - name: "X-Previo-Hotel-Id"
        in: "header"
        description: "Hotel ID in PMS"
        required: true
        type: "integer"
        format: "int32"
      - name: "filterText"
        in: "query"
        description: "Filter stay packages titles"
        required: false
        type: "string"
      - name: "filterFrom"
        in: "query"
        description: "From filter"
        required: false
        type: "string"
        format: "date"
      - name: "filterTo"
        in: "query"
        description: "To filter"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "Search results"
          schema:
            properties:
              success:
                type: "boolean"
              packages:
                description: "Array of stay packages"
                type: "array"
                items:
                  $ref: "#/definitions/Package"
              total:
                type: "integer"
            type: "object"
        400:
          description: "Wrong username/password combination"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Error"
        500:
          description: "Error occured"
          schema:
            $ref: "#/definitions/Error"
      security:
      - basicAuth: []
  /premise/kind:
    get:
      tags:
      - "Kind"
      summary: "Get general list of premise kinds"
      operationId: "getKinds"
      parameters:
      - name: "X-Previo-Hotel-Id"
        in: "header"
        description: "Hotel ID in PMS"
        required: true
        type: "integer"
        format: "int32"
      - name: "obtId"
        in: "query"
        description: "Object kind Id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "ObjectKind"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectKind"
        400:
          description: "Wrong username/password combination"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Error"
        500:
          description: "Error occured"
          schema:
            $ref: "#/definitions/Error"
      security:
      - basicAuth: []
  /services/search:
    get:
      tags:
      - "SearchServices"
      summary: "Search for available services"
      operationId: "searchServices"
      parameters:
      - name: "X-Previo-Hotel-Id"
        in: "header"
        description: "Hotel ID in PMS"
        required: true
        type: "integer"
        format: "int32"
      - name: "filterText"
        in: "query"
        description: "Filter service names"
        required: false
        type: "string"
      responses:
        200:
          description: "Search result"
          schema:
            properties:
              success:
                type: "boolean"
              services:
                description: "Array of services"
                type: "array"
                items:
                  $ref: "#/definitions/Service"
              total:
                type: "integer"
            type: "object"
        400:
          description: "Wrong username/password combination"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Error"
        500:
          description: "Error occured"
          schema:
            $ref: "#/definitions/Error"
      security:
      - basicAuth: []
definitions:
  Error:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  ObjectKind:
    properties:
      obkId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
        format: "string"
      description:
        type: "string"
        format: "string"
      galId:
        format: "int32"
      obtId:
        type: "integer"
        format: "int32"
      unitId:
        type: "integer"
        format: "int32"
      hasCapacity:
        type: "boolean"
        format: "boolean"
      capacity:
        type: "integer"
        format: "int32"
      extraCapacity:
        type: "integer"
        format: "int32"
      singleUse:
        type: "boolean"
        format: "boolean"
      offerOnline:
        type: "boolean"
        format: "boolean"
      order:
        type: "integer"
        format: "int32"
      properties:
        description: "[]"
        $ref: "#/definitions/ObjectKindProperty"
      pckId:
        type: "integer"
        format: "int32"
    type: "object"
  ObjectKindProperty:
    properties:
      okpId:
        type: "integer"
        format: "int32"
      value:
        type: "string"
        format: "string"
      attribute:
        description: "[]"
        $ref: "#/definitions/ObjectKindPropertyAttribute"
    type: "object"
  ObjectKindPropertyAttribute:
    properties:
      praId:
        type: "integer"
        format: "int32"
      value:
        type: "string"
        format: "string"
    type: "object"
  Package:
    properties:
      pckId:
        type: "integer"
        format: "int32"
      hogId:
        type: "integer"
        format: "int32"
      pcuId:
        type: "integer"
        format: "int32"
      vatType:
        type: "string"
        format: "string"
      name:
        type: "string"
        format: "string"
      description:
        type: "string"
        format: "string"
      nights:
        type: "integer"
        format: "int32"
      order:
        type: "integer"
        format: "int32"
      galId:
        type: "integer"
        format: "int32"
      asCheckbox:
        type: "boolean"
        format: "boolean"
      segId:
        type: "integer"
        format: "int32"
      pcgId:
        type: "integer"
        format: "int32"
    type: "object"
  Service:
    properties:
      styId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
        format: "string"
      active:
        type: "boolean"
        format: "boolean"
      nights:
        type: "string"
        format: "string"
      order:
        type: "integer"
        format: "int32"
      description:
        type: "integer"
        format: "int32"
      lastEdited:
        type: "string"
        format: "string"
      lastEditedBy:
        type: "string"
        format: "string"
      hasTerms:
        type: "boolean"
        format: "boolean"
    type: "object"
securityDefinitions:
  basicAuth:
    type: "basic"